import{_ as a,s as i,w as e,aV as n}from"./chunks/framework.QtuKVOTp.js";import"./chunks/theme.BTj105g2.js";const g=JSON.parse('{"title":"Spacings","description":"","frontmatter":{},"headers":[],"relativePath":"designTokens/spacings.md","filePath":"designTokens/spacings.md"}'),l={name:"designTokens/spacings.md"};function t(p,s,o,c,h,d){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="spacings" tabindex="-1">Spacings <a class="header-anchor" href="#spacings" aria-label="Permalink to &quot;Spacings&quot;">​</a></h1><p>The design system uses predefined spacings to create a predictable and harmonious layout. These tokens can be used for padding, margin, and position.</p><h2 id="available-tokens" tabindex="-1">Available tokens <a class="header-anchor" href="#available-tokens" aria-label="Permalink to &quot;Available tokens&quot;">​</a></h2><p>The following tokens are available:</p><ul><li><code>oc-space-xsmall</code> (4px)</li><li><code>oc-space-small</code> (8px)</li><li><code>oc-space-medium</code> (16px)</li><li><code>oc-space-large</code> (24px)</li><li><code>oc-space-xlarge</code> (48px)</li><li><code>oc-space-xxlarge</code> (96px)</li></ul><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>You can use these variables in your SCSS files or style blocks:</p><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--oc-space-medium</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--oc-space-small</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,8)]))}const E=a(l,[["render",t]]);export{g as __pageData,E as default};
