---
services:
  traefik:
    image: traefik:v3.0.3
    networks:
      oc-net:
        aliases:
          - ${OC_DOMAIN:-oc.opencloud.test}
          - ${WOPISERVER_DOMAIN:-wopiserver.opencloud.test}
          - ${COLLABORA_DOMAIN:-collabora.opencloud.test}
    command:
      - '--log.level=${TRAEFIK_LOG_LEVEL:-ERROR}'
      # letsencrypt configuration
      - '--certificatesResolvers.http.acme.email=${TRAEFIK_ACME_MAIL:-example@example.org}'
      - '--certificatesResolvers.http.acme.storage=/certs/acme.json'
      - '--certificatesResolvers.http.acme.httpChallenge.entryPoint=http'
      - '--certificatesresolvers.http.acme.caserver=${TRAEFIK_ACME_CASERVER:-https://acme-v02.api.letsencrypt.org/directory}'
      # enable dashboard
      - '--api.dashboard=true'
      # define entrypoints
      - '--entryPoints.http.address=:80'
      - '--entryPoints.http.http.redirections.entryPoint.to=https'
      - '--entryPoints.http.http.redirections.entryPoint.scheme=https'
      - '--entryPoints.https.address=:443'
      # docker provider (get configuration from container labels)
      - '--providers.docker.endpoint=unix:///var/run/docker.sock'
      - '--providers.docker.exposedByDefault=false'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - 'certs:/certs'
    labels:
      - 'traefik.enable=${TRAEFIK_DASHBOARD:-false}'
      - 'traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_BASIC_AUTH_USERS:-admin:$$apr1$$4vqie50r$$YQAmQdtmz5n9rEALhxJ4l.}' # defaults to admin:admin
      - 'traefik.http.routers.traefik.entrypoints=https'
      - 'traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN:-traefik.opencloud.test}`)'
      - 'traefik.http.routers.traefik.middlewares=traefik-auth'
      - 'traefik.http.routers.traefik.tls.certresolver=http'
      - 'traefik.http.routers.traefik.service=api@internal'
    logging:
      driver: ${LOG_DRIVER:-local}
    restart: always

  opencloud:
    image: ${OC_DOCKER_IMAGE:-opencloudeu/opencloud-rolling}:${OC_DOCKER_TAG:-latest}
    networks:
      oc-net:
    entrypoint:
      - /bin/sh
    # run opencloud init to initialize a configuration file with random secrets
    # it will fail on subsequent runs, because the config file already exists
    # therefore we ignore the error and then start the opencloud server
    command: ['-c', 'opencloud init || true; opencloud server']
    environment:
      OC_URL: https://${OC_DOMAIN:-oc.opencloud.test}
      OC_LOG_LEVEL: ${OC_LOG_LEVEL:-error} # make OC less verbose
      OC_LOG_COLOR: '${LOG_PRETTY:-false}'
      OC_LOG_PRETTY: '${LOG_PRETTY:-false}'
      PROXY_TLS: 'false' # do not use SSL between Traefik and OC
      GATEWAY_GRPC_ADDR: 0.0.0.0:9142 # make the REVA gateway accessible to the app drivers
      # INSECURE: needed if OC / Traefik is using self generated certificates
      OC_INSECURE: '${INSECURE:-false}'
      # basic auth (not recommended, but needed for eg. WebDAV clients that do not support OpenID Connect)
      PROXY_ENABLE_BASIC_AUTH: '${PROXY_ENABLE_BASIC_AUTH:-false}'
      # admin user password
      IDM_ADMIN_PASSWORD: '${ADMIN_PASSWORD:-admin}' # this overrides the admin password from the configuration file
      # demo users
      IDM_CREATE_DEMO_USERS: '${DEMO_USERS:-false}'
      # enable the notifications service
      OC_ADD_RUN_SERVICES: 'notifications'
      NOTIFICATIONS_SMTP_HOST: inbucket
      NOTIFICATIONS_SMTP_PORT: 2500
      NOTIFICATIONS_SMTP_SENDER: OC notifications <notifications@${OC_DOMAIN:-oc.opencloud.test}>
      NOTIFICATIONS_SMTP_USERNAME: notifications@${OC_DOMAIN:-oc.opencloud.test}
      NOTIFICATIONS_SMTP_INSECURE: 'true' # the mail catcher uses self signed certificates
      # fulltext search
      SEARCH_EXTRACTOR_TYPE: tika
      SEARCH_EXTRACTOR_TIKA_TIKA_URL: http://tika:9998
      # denial shares
      FRONTEND_OCS_ENABLE_DENIALS: '${SHARE_DENIALS:-false}'
      # make the registry available to the app provider containers
      NATS_NATS_HOST: 0.0.0.0
      # CSP configs
      PROXY_CSP_CONFIG_FILE_LOCATION: /etc/opencloud/csp.yaml
      # these two vars are needed in the csp config file to include the web office apps and the importer
      COLLABORA_DOMAIN: ${COLLABORA_DOMAIN:-collabora.opencloud.test}
      COMPANION_DOMAIN: ${COMPANION_DOMAIN:-companion.opencloud.test}
      # enable to allow using the banned passwords list
      OC_PASSWORD_POLICY_BANNED_PASSWORDS_LIST: banned-password-list.txt
      # make collabora the secure view app
      FRONTEND_APP_HANDLER_SECURE_VIEW_APP_ADDR: eu.opencloud.api.collaboration.Collabora
      ACTIVITYLOG_WRITE_BUFFER_DURATION: '0'
    volumes:
      - ./config/opencloud/proxy.yaml:/etc/opencloud/proxy.yaml
      - ./config/opencloud/app-registry.yaml:/etc/opencloud/app-registry.yaml
      - ./config/opencloud/csp.yaml:/etc/opencloud/csp.yaml
      - ./config/opencloud/banned-password-list.txt:/etc/opencloud/banned-password-list.txt
      - oc-config:/etc/opencloud
      - oc-data:/var/lib/opencloud
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.opencloud.entrypoints=https'
      - 'traefik.http.routers.opencloud.rule=Host(`${OC_DOMAIN:-oc.opencloud.test}`)'
      - 'traefik.http.routers.opencloud.tls.certresolver=http'
      - 'traefik.http.routers.opencloud.service=opencloud'
      - 'traefik.http.services.opencloud.loadbalancer.server.port=9200'
    logging:
      driver: ${LOG_DRIVER:-local}
    restart: always

  web:
    image: opencloud-eu/web:${WEB_DOCKER_TAG:-latest}
    networks:
      oc-net:
    logging:
      driver: ${LOG_DRIVER:-local}
    restart: always

  collaboration:
    image: ${OC_DOCKER_IMAGE:-opencloudeu/opencloud-rolling}:${OC_DOCKER_TAG:-latest}
    networks:
      oc-net:
    depends_on:
      opencloud:
        condition: service_started
      collabora:
        condition: service_healthy
    entrypoint:
      - /bin/sh
    command: ['-c', 'opencloud collaboration server']
    environment:
      COLLABORATION_GRPC_ADDR: 0.0.0.0:9301
      COLLABORATION_HTTP_ADDR: 0.0.0.0:9300
      COLLABORATION_WOPI_SRC: https://${WOPISERVER_DOMAIN:-wopiserver.opencloud.test}
      COLLABORATION_APP_NAME: 'Collabora'
      COLLABORATION_APP_ADDR: https://${COLLABORA_DOMAIN:-collabora.opencloud.test}
      COLLABORATION_APP_ICON: https://${COLLABORA_DOMAIN:-collabora.opencloud.test}/favicon.ico
      COLLABORATION_APP_INSECURE: '${INSECURE:-true}'
      COLLABORATION_CS3API_DATAGATEWAY_INSECURE: '${INSECURE:-true}'
      COLLABORATION_LOG_LEVEL: ${LOG_LEVEL:-info}
      MICRO_REGISTRY_ADDRESS: 'opencloud:9233'
      OC_URL: https://${OC_DOMAIN:-oc.opencloud.test}
    volumes:
      - oc-config:/etc/opencloud
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.collaboration.entrypoints=https'
      - 'traefik.http.routers.collaboration.rule=Host(`${WOPISERVER_DOMAIN:-wopiserver.opencloud.test}`)'
      - 'traefik.http.routers.collaboration.tls.certresolver=http'
      - 'traefik.http.routers.collaboration.service=collaboration'
      - 'traefik.http.services.collaboration.loadbalancer.server.port=9300'
    logging:
      driver: ${LOG_DRIVER:-local}
    restart: always

  collabora:
    image: collabora/code:24.04.5.1.1
    networks:
      oc-net:
    environment:
      aliasgroup1: https://${WOPISERVER_DOMAIN:-wopiserver.opencloud.test}:443
      DONT_GEN_SSL_CERT: 'YES'
      extra_params: --o:ssl.enable=false --o:ssl.termination=true --o:welcome.enable=false --o:net.frame_ancestors=${OC_DOMAIN:-oc.opencloud.test}
      username: ${COLLABORA_ADMIN_USER}
      password: ${COLLABORA_ADMIN_PASSWORD}
    cap_add:
      - MKNOD
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.collabora.entrypoints=https'
      - 'traefik.http.routers.collabora.rule=Host(`${COLLABORA_DOMAIN:-collabora.opencloud.test}`)'
      - 'traefik.http.routers.collabora.tls.certresolver=http'
      - 'traefik.http.routers.collabora.service=collabora'
      - 'traefik.http.services.collabora.loadbalancer.server.port=9980'
    logging:
      driver: ${LOG_DRIVER:-local}
    restart: always
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9980/hosting/discovery']

  tika:
    image: ${TIKA_IMAGE:-apache/tika:latest-full}
    networks:
      oc-net:
    restart: always

  inbucket:
    image: inbucket/inbucket
    networks:
      - oc-net
    entrypoint:
      - /bin/sh
    command:
      [
        '-c',
        "apk add openssl; openssl req -subj '/CN=inbucket.test' -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/server.key -out /tmp/server.crt; /start-inbucket.sh"
      ]
    environment:
      INBUCKET_SMTP_TLSENABLED: 'true'
      INBUCKET_SMTP_TLSPRIVKEY: /tmp/server.key
      INBUCKET_SMTP_TLSCERT: /tmp/server.crt
      INBUCKET_STORAGE_MAILBOXMSGCAP: 1000
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.inbucket.entrypoints=https'
      - 'traefik.http.routers.inbucket.rule=Host(`${INBUCKET_DOMAIN:-mail.opencloud.test}`)'
      - 'traefik.http.routers.inbucket.tls.certresolver=http'
      - 'traefik.http.routers.inbucket.service=inbucket'
      - 'traefik.http.services.inbucket.loadbalancer.server.port=9000'
    logging:
      driver: ${LOG_DRIVER:-local}
    restart: always

volumes:
  certs:
  oc-config:
  oc-data:

networks:
  oc-net:
