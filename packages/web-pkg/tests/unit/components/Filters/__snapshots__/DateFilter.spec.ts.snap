// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`DateFilter > can use a custom attribute as display name 1`] = `
"<div class="date-filter flex date-filter-users">
  <div class="oc-filter-chip flex"><button type="button" class="oc-button oc-rounded oc-button-m oc-button-justify-content-center oc-button-gap-m oc-button-surface oc-button-raw-inverse oc-button-surface-raw-inverse oc-filter-chip-button oc-pill py-1 px-2 text-xs" id="oc-filter-chip-5">
      <!--v-if-->
      <!-- @slot Content of the button --> <span class="oc-icon oc-icon-s box-content oc-filter-check-icon-inactive"><svg data-testid="inline-svg-stub" src="icons/check-fill.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span> <span class="truncate oc-filter-chip-label">Users</span>
      <!--v-if--> <span class="oc-icon oc-icon-s box-content"><svg data-testid="inline-svg-stub" src="icons/arrow-down-s-fill.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span>
    </button>
    <div id="oc-drop-6" class="oc-drop oc-box-shadow-medium oc-rounded oc-filter-chip-drop">
      <div class="oc-card oc-card-body p-2">
        <ul class="oc-list date-filter-list">
          <li class="my-1 first:mt-0 last:mb-0"><button type="button" class="oc-button oc-rounded oc-button-m oc-button-justify-content-space-between oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw date-filter-list-item flex justify-between items-center oc-width-1-1 p-1" data-testid="today">
              <!--v-if-->
              <!-- @slot Content of the button -->
              <div class="flex items-center truncate">
                <div class="truncate ml-2">today</div>
              </div>
              <div class="flex">
                <!--v-if-->
              </div>
            </button></li>
          <li class="my-1 first:mt-0 last:mb-0"><button type="button" class="oc-button oc-rounded oc-button-m oc-button-justify-content-space-between oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw date-filter-list-item flex justify-between items-center oc-width-1-1 p-1" data-testid="yesterday">
              <!--v-if-->
              <!-- @slot Content of the button -->
              <div class="flex items-center truncate">
                <div class="truncate ml-2">yesterday</div>
              </div>
              <div class="flex">
                <!--v-if-->
              </div>
            </button></li>
          <li class="my-1"><button type="button" class="oc-button oc-rounded oc-button-m oc-button-justify-content-space-between oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw date-filter-list-item flex justify-between items-center oc-width-1-1 p-1" data-testid="custom-date-range">
              <!--v-if-->
              <!-- @slot Content of the button -->
              <div class="flex items-center truncate">
                <div class="truncate ml-2"><span>Custom date range</span></div>
              </div>
              <div class="flex">
                <!--v-if-->
              </div>
            </button></li>
        </ul>
        <div class="date-filter-range-panel py-2">
          <div class="flex items-center justify-between mb-4"><button type="button" aria-label="Go back to filter options" class="oc-button oc-rounded oc-button-m oc-button-justify-content-center oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw date-filter-range-panel-back">
              <!--v-if-->
              <!-- @slot Content of the button --> <span class="oc-icon oc-icon-m box-content"><svg data-testid="inline-svg-stub" src="icons/arrow-left-s-line.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span>
            </button> <span>Custom date range</span> <button type="button" aria-label="Close filter" class="oc-button oc-rounded oc-button-m oc-button-justify-content-center oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw date-filter-range-panel-close">
              <!--v-if-->
              <!-- @slot Content of the button --> <span class="oc-icon oc-icon-m box-content"><svg data-testid="inline-svg-stub" src="icons/close-fill.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span>
            </button></div>
          <div class="mt-2">
            <div class="oc-date-picker"><label class="oc-label" for="oc-textinput-7">From
                <!--v-if-->
              </label>
              <div class="oc-position-relative">
                <!--v-if--> <input id="oc-textinput-7" aria-invalid="false" class="oc-text-input oc-input oc-rounded" type="date" value="">
                <!--v-if-->
              </div>
              <div class="oc-text-input-message flex align-center text-sm mt-1">
                <!--v-if-->
              </div>
              <!--v-if-->
            </div>
            <div class="oc-date-picker"><label class="oc-label" for="oc-textinput-8">To
                <!--v-if-->
              </label>
              <div class="oc-position-relative">
                <!--v-if--> <input id="oc-textinput-8" aria-invalid="false" class="oc-text-input oc-input oc-rounded" type="date" value="">
                <!--v-if-->
              </div>
              <div class="oc-text-input-message flex align-center text-sm mt-1">
                <!--v-if-->
              </div>
              <!--v-if-->
            </div>
          </div>
          <div class="date-filter-apply-btn text-end"><button type="button" disabled="" class="oc-button oc-rounded oc-button-s oc-button-justify-content-center oc-button-gap-m oc-button-secondary oc-button-outline oc-button-secondary-outline">
              <!--v-if-->
              <!-- @slot Content of the button --> Apply
            </button></div>
        </div>
      </div>
    </div>
    <!--v-if-->
  </div>
</div>"
`;

exports[`DateFilter > renders all items 1`] = `
"<div class="date-filter flex date-filter-users">
  <div class="oc-filter-chip flex"><button type="button" class="oc-button oc-rounded oc-button-m oc-button-justify-content-center oc-button-gap-m oc-button-surface oc-button-raw-inverse oc-button-surface-raw-inverse oc-filter-chip-button oc-pill py-1 px-2 text-xs" id="oc-filter-chip-1">
      <!--v-if-->
      <!-- @slot Content of the button --> <span class="oc-icon oc-icon-s box-content oc-filter-check-icon-inactive"><svg data-testid="inline-svg-stub" src="icons/check-fill.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span> <span class="truncate oc-filter-chip-label">Users</span>
      <!--v-if--> <span class="oc-icon oc-icon-s box-content"><svg data-testid="inline-svg-stub" src="icons/arrow-down-s-fill.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span>
    </button>
    <div id="oc-drop-2" class="oc-drop oc-box-shadow-medium oc-rounded oc-filter-chip-drop">
      <div class="oc-card oc-card-body p-2">
        <ul class="oc-list date-filter-list">
          <li class="my-1 first:mt-0 last:mb-0"><button type="button" class="oc-button oc-rounded oc-button-m oc-button-justify-content-space-between oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw date-filter-list-item flex justify-between items-center oc-width-1-1 p-1" data-testid="today">
              <!--v-if-->
              <!-- @slot Content of the button -->
              <div class="flex items-center truncate">
                <div class="truncate ml-2">today</div>
              </div>
              <div class="flex">
                <!--v-if-->
              </div>
            </button></li>
          <li class="my-1 first:mt-0 last:mb-0"><button type="button" class="oc-button oc-rounded oc-button-m oc-button-justify-content-space-between oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw date-filter-list-item flex justify-between items-center oc-width-1-1 p-1" data-testid="yesterday">
              <!--v-if-->
              <!-- @slot Content of the button -->
              <div class="flex items-center truncate">
                <div class="truncate ml-2">yesterday</div>
              </div>
              <div class="flex">
                <!--v-if-->
              </div>
            </button></li>
          <li class="my-1"><button type="button" class="oc-button oc-rounded oc-button-m oc-button-justify-content-space-between oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw date-filter-list-item flex justify-between items-center oc-width-1-1 p-1" data-testid="custom-date-range">
              <!--v-if-->
              <!-- @slot Content of the button -->
              <div class="flex items-center truncate">
                <div class="truncate ml-2"><span>Custom date range</span></div>
              </div>
              <div class="flex">
                <!--v-if-->
              </div>
            </button></li>
        </ul>
        <div class="date-filter-range-panel py-2">
          <div class="flex items-center justify-between mb-4"><button type="button" aria-label="Go back to filter options" class="oc-button oc-rounded oc-button-m oc-button-justify-content-center oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw date-filter-range-panel-back">
              <!--v-if-->
              <!-- @slot Content of the button --> <span class="oc-icon oc-icon-m box-content"><svg data-testid="inline-svg-stub" src="icons/arrow-left-s-line.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span>
            </button> <span>Custom date range</span> <button type="button" aria-label="Close filter" class="oc-button oc-rounded oc-button-m oc-button-justify-content-center oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw date-filter-range-panel-close">
              <!--v-if-->
              <!-- @slot Content of the button --> <span class="oc-icon oc-icon-m box-content"><svg data-testid="inline-svg-stub" src="icons/close-fill.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span>
            </button></div>
          <div class="mt-2">
            <div class="oc-date-picker"><label class="oc-label" for="oc-textinput-3">From
                <!--v-if-->
              </label>
              <div class="oc-position-relative">
                <!--v-if--> <input id="oc-textinput-3" aria-invalid="false" class="oc-text-input oc-input oc-rounded" type="date" value="">
                <!--v-if-->
              </div>
              <div class="oc-text-input-message flex align-center text-sm mt-1">
                <!--v-if-->
              </div>
              <!--v-if-->
            </div>
            <div class="oc-date-picker"><label class="oc-label" for="oc-textinput-4">To
                <!--v-if-->
              </label>
              <div class="oc-position-relative">
                <!--v-if--> <input id="oc-textinput-4" aria-invalid="false" class="oc-text-input oc-input oc-rounded" type="date" value="">
                <!--v-if-->
              </div>
              <div class="oc-text-input-message flex align-center text-sm mt-1">
                <!--v-if-->
              </div>
              <!--v-if-->
            </div>
          </div>
          <div class="date-filter-apply-btn text-end"><button type="button" disabled="" class="oc-button oc-rounded oc-button-s oc-button-justify-content-center oc-button-gap-m oc-button-secondary oc-button-outline oc-button-secondary-outline">
              <!--v-if-->
              <!-- @slot Content of the button --> Apply
            </button></div>
        </div>
      </div>
    </div>
    <!--v-if-->
  </div>
</div>"
`;
