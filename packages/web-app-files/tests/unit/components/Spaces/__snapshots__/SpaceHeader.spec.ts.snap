// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`SpaceHeader > should add the "squashed"-class when the sidebar is opened 1`] = `
"<div class="space-header oc-p-m oc-flex space-header-squashed">
  <div class="space-header-image"><img class="oc-cursor-pointer" alt="" src="blob:image"></div>
  <div class="space-header-infos">
    <div class="oc-flex oc-mb-s oc-flex-middle oc-flex-between">
      <div class="oc-flex oc-flex-middle space-header-infos-heading">
        <h2 class="space-header-name">space</h2> <button type="button" aria-label="Show context menu" class="oc-button oc-rounded oc-button-m oc-button-justify-content-center oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw oc-ml-s oc-p-xs" id="space-context-btn">
          <!--v-if-->
          <!-- @slot Content of the button --> <span class="oc-icon oc-icon-m"><svg data-testid="inline-svg-stub" src="icons/more-2-fill.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span>
        </button>
        <div id="space-context-drop" class="oc-drop oc-box-shadow-medium oc-rounded" options="[object Object]">
          <div class="oc-card oc-card-body oc-p-s">
            <space-context-actions-stub actionoptions="[object Object]" loading="false"></space-context-actions-stub>
          </div>
        </div>
      </div> <button type="button" aria-label="Open context menu and show members" class="oc-button oc-rounded oc-button-m oc-button-justify-content-center oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw no-hover">
        <!--v-if-->
        <!-- @slot Content of the button --> <span class="oc-icon oc-icon-s"><svg data-testid="inline-svg-stub" src="icons/group-line.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span> <span class="space-header-people-count oc-text-small">1 member</span>
      </button>
    </div>
    <!--v-if-->
    <!--v-if-->
    <!--v-if-->
  </div>
</div>"
`;

exports[`SpaceHeader > space description > should show the description 1`] = `
"<div class="space-header oc-p-m oc-flex">
  <div class="space-header-image"><img class="oc-cursor-pointer" alt="" src="blob:image"></div>
  <div class="space-header-infos">
    <div class="oc-flex oc-mb-s oc-flex-middle oc-flex-between">
      <div class="oc-flex oc-flex-middle space-header-infos-heading">
        <h2 class="space-header-name">space</h2> <button type="button" aria-label="Show context menu" class="oc-button oc-rounded oc-button-m oc-button-justify-content-center oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw oc-ml-s oc-p-xs" id="space-context-btn">
          <!--v-if-->
          <!-- @slot Content of the button --> <span class="oc-icon oc-icon-m"><svg data-testid="inline-svg-stub" src="icons/more-2-fill.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span>
        </button>
        <div id="space-context-drop" class="oc-drop oc-box-shadow-medium oc-rounded" options="[object Object]">
          <div class="oc-card oc-card-body oc-p-s">
            <space-context-actions-stub actionoptions="[object Object]" loading="false"></space-context-actions-stub>
          </div>
        </div>
      </div> <button type="button" aria-label="Open context menu and show members" class="oc-button oc-rounded oc-button-m oc-button-justify-content-center oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw no-hover">
        <!--v-if-->
        <!-- @slot Content of the button --> <span class="oc-icon oc-icon-s"><svg data-testid="inline-svg-stub" src="icons/group-line.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span> <span class="space-header-people-count oc-text-small">1 member</span>
      </button>
    </div>
    <!--v-if-->
    <div class="markdown-container oc-flex">
      <!---->
      <div class="markdown-container-edit oc-ml-s"><a attrs="[object Object]" aria-label="Edit description" class="oc-button oc-rounded oc-button-s oc-button-justify-content-center oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw oc-p-xs"></a></div>
    </div>
    <!--v-if-->
  </div>
</div>"
`;

exports[`SpaceHeader > space image > should show the set image 1`] = `
"<div class="space-header oc-p-m oc-flex">
  <div class="space-header-image"><img class="oc-cursor-pointer" alt="" src="blob:image"></div>
  <div class="space-header-infos">
    <div class="oc-flex oc-mb-s oc-flex-middle oc-flex-between">
      <div class="oc-flex oc-flex-middle space-header-infos-heading">
        <h2 class="space-header-name">space</h2> <button type="button" aria-label="Show context menu" class="oc-button oc-rounded oc-button-m oc-button-justify-content-center oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw oc-ml-s oc-p-xs" id="space-context-btn">
          <!--v-if-->
          <!-- @slot Content of the button --> <span class="oc-icon oc-icon-m"><svg data-testid="inline-svg-stub" src="icons/more-2-fill.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span>
        </button>
        <div id="space-context-drop" class="oc-drop oc-box-shadow-medium oc-rounded" options="[object Object]">
          <div class="oc-card oc-card-body oc-p-s">
            <space-context-actions-stub actionoptions="[object Object]" loading="false"></space-context-actions-stub>
          </div>
        </div>
      </div> <button type="button" aria-label="Open context menu and show members" class="oc-button oc-rounded oc-button-m oc-button-justify-content-center oc-button-gap-m oc-button-secondary oc-button-raw oc-button-secondary-raw no-hover">
        <!--v-if-->
        <!-- @slot Content of the button --> <span class="oc-icon oc-icon-s"><svg data-testid="inline-svg-stub" src="icons/group-line.svg" transform-source="(svg) => {
      if (__props.accessibleLabel !== &quot;&quot;) {
        const title = document.createElement(&quot;title&quot;);
        title.setAttribute(&quot;id&quot;, svgTitleId.value);
        title.appendChild(document.createTextNode(__props.accessibleLabel));
        svg.insertBefore(title, svg.firstChild);
      };
      return svg;
    }" aria-hidden="true" focusable="false"></svg></span> <span class="space-header-people-count oc-text-small">1 member</span>
      </button>
    </div>
    <!--v-if-->
    <!--v-if-->
    <!--v-if-->
  </div>
</div>"
`;
